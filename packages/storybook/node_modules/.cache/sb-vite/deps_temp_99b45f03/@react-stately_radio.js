import {
  $e5be200c675c3b3a$export$fc1a364ae1f3ff10
} from "./chunk-UMQ3CZZO.js";
import {
  $458b0a5536c1a7cf$export$40bfa8c7b0832715
} from "./chunk-JKZVH6V4.js";
import {
  require_react
} from "./chunk-74VSPVB3.js";
import {
  __toESM
} from "./chunk-AUZ3RYOM.js";

// ../../node_modules/.pnpm/@react-stately+radio@3.10.4_react@18.3.1/node_modules/@react-stately/radio/dist/useRadioGroupState.mjs
var import_react = __toESM(require_react(), 1);
var $a54cdc5c1942b639$var$instance = Math.round(Math.random() * 1e10);
var $a54cdc5c1942b639$var$i = 0;
function $a54cdc5c1942b639$export$bca9d026f8e704eb(props) {
  let name = (0, import_react.useMemo)(() => props.name || `radio-group-${$a54cdc5c1942b639$var$instance}-${++$a54cdc5c1942b639$var$i}`, [
    props.name
  ]);
  var _props_defaultValue;
  let [selectedValue, setSelected] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, (_props_defaultValue = props.defaultValue) !== null && _props_defaultValue !== void 0 ? _props_defaultValue : null, props.onChange);
  let [lastFocusedValue, setLastFocusedValue] = (0, import_react.useState)(null);
  let validation = (0, $e5be200c675c3b3a$export$fc1a364ae1f3ff10)({
    ...props,
    value: selectedValue
  });
  let setSelectedValue = (value) => {
    if (!props.isReadOnly && !props.isDisabled) {
      setSelected(value);
      validation.commitValidation();
    }
  };
  let isInvalid = validation.displayValidation.isInvalid;
  return {
    ...validation,
    name,
    selectedValue,
    setSelectedValue,
    lastFocusedValue,
    setLastFocusedValue,
    isDisabled: props.isDisabled || false,
    isReadOnly: props.isReadOnly || false,
    isRequired: props.isRequired || false,
    validationState: props.validationState || (isInvalid ? "invalid" : null),
    isInvalid
  };
}
export {
  $a54cdc5c1942b639$export$bca9d026f8e704eb as useRadioGroupState
};
//# sourceMappingURL=@react-stately_radio.js.map
