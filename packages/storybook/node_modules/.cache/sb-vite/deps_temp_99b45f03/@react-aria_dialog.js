import {
  $337b884510726a0d$export$14c98a7594375490
} from "./chunk-ZTB4BLKD.js";
import "./chunk-N7ONARS7.js";
import {
  $6a99195332edec8b$export$80f3e147d781571c
} from "./chunk-5ILNVGIM.js";
import "./chunk-Q5WSF7A2.js";
import "./chunk-KIIJGJPT.js";
import "./chunk-OTLY6RDP.js";
import "./chunk-NWXLAXSW.js";
import "./chunk-354QWSNU.js";
import "./chunk-3ENZRQOG.js";
import {
  $65484d02dcb7eb3e$export$457c3d6518dd4c6f,
  $bdb11010cef70236$export$b4cc09c592e8fdb8
} from "./chunk-LKOLIFFJ.js";
import "./chunk-FQR2FOR2.js";
import "./chunk-464KWARN.js";
import "./chunk-JKZVH6V4.js";
import "./chunk-KMVIHZXK.js";
import "./chunk-N32A3K7I.js";
import {
  require_react
} from "./chunk-74VSPVB3.js";
import {
  __toESM
} from "./chunk-AUZ3RYOM.js";

// ../../node_modules/.pnpm/@react-aria+dialog@3.5.14_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/dialog/dist/useDialog.mjs
var import_react = __toESM(require_react(), 1);
function $40df3f8667284809$export$d55e7ee900f34e93(props, ref) {
  let { role = "dialog" } = props;
  let titleId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)();
  titleId = props["aria-label"] ? void 0 : titleId;
  let isRefocusing = (0, import_react.useRef)(false);
  (0, import_react.useEffect)(() => {
    if (ref.current && !ref.current.contains(document.activeElement)) {
      (0, $6a99195332edec8b$export$80f3e147d781571c)(ref.current);
      let timeout = setTimeout(() => {
        if (document.activeElement === ref.current) {
          isRefocusing.current = true;
          if (ref.current) {
            ref.current.blur();
            (0, $6a99195332edec8b$export$80f3e147d781571c)(ref.current);
          }
          isRefocusing.current = false;
        }
      }, 500);
      return () => {
        clearTimeout(timeout);
      };
    }
  }, [
    ref
  ]);
  (0, $337b884510726a0d$export$14c98a7594375490)();
  return {
    dialogProps: {
      ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
        labelable: true
      }),
      role,
      tabIndex: -1,
      "aria-labelledby": props["aria-labelledby"] || titleId,
      // Prevent blur events from reaching useOverlay, which may cause
      // popovers to close. Since focus is contained within the dialog,
      // we don't want this to occur due to the above useEffect.
      onBlur: (e) => {
        if (isRefocusing.current)
          e.stopPropagation();
      }
    },
    titleProps: {
      id: titleId
    }
  };
}
export {
  $40df3f8667284809$export$d55e7ee900f34e93 as useDialog
};
//# sourceMappingURL=@react-aria_dialog.js.map
