import {
  $319e236875307eab$export$a9b970dcc4ae71a9
} from "./chunk-6X7VUGF4.js";
import {
  $18f2051aff69b9bf$export$43bb16f9c6d9e3f7,
  $896ba0a80a8f4d36$export$85fd5fdf27bacc79,
  $fca6afa0e843324b$export$f12b703ca79dfbb1
} from "./chunk-Q5WSF7A2.js";
import "./chunk-KIIJGJPT.js";
import "./chunk-OTLY6RDP.js";
import {
  $14e0f24ef4ac5c92$export$42c81a444fbfb5d4,
  $14e0f24ef4ac5c92$export$629b0a497aa65267,
  $14e0f24ef4ac5c92$export$91b62ebf2ba703ee,
  $14e0f24ef4ac5c92$export$a2258d9c4118825c,
  $14e0f24ef4ac5c92$export$a5a3b454ada2268e,
  $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3,
  $14e0f24ef4ac5c92$export$ea39ec197993aef0
} from "./chunk-NWXLAXSW.js";
import {
  $507fabe10e71c6fb$export$630ff653c5ada6a9,
  $f6c31cce2adf654f$export$45712eceda6fad21
} from "./chunk-354QWSNU.js";
import "./chunk-3ENZRQOG.js";
import {
  $2f04cbc44ee30ce0$export$c826860796309d1b,
  $313b98861ee5dd6c$export$d6875122194c7b44,
  $3ef42575df84b30b$export$9d1611c77c2fe928,
  $4f58c5f72bcf79f7$export$496315a1608d9602,
  $5a387cc49350e6db$export$722debc0e56fea39,
  $62d8ded9296f3872$export$cfa2225e87938781,
  $65484d02dcb7eb3e$export$457c3d6518dd4c6f,
  $7215afc6de606d6b$export$de79e2c695e052f3,
  $bdb11010cef70236$export$b4cc09c592e8fdb8,
  $e9faafb641e167db$export$90fc3a17d93f704c,
  $ef06256079686ba0$export$f8aeda7b10753fa1
} from "./chunk-LKOLIFFJ.js";
import "./chunk-FQR2FOR2.js";
import "./chunk-464KWARN.js";
import "./chunk-JKZVH6V4.js";
import "./chunk-KMVIHZXK.js";
import {
  require_react
} from "./chunk-74VSPVB3.js";
import {
  __toESM
} from "./chunk-AUZ3RYOM.js";

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/ar-AE.mjs
var $39324ace0d945f59$exports = {};
$39324ace0d945f59$exports = {
  "dateRange": (args) => `${args.startDate} إلى ${args.endDate}`,
  "dateSelected": (args) => `${args.date} المحدد`,
  "finishRangeSelectionPrompt": `انقر لإنهاء عملية تحديد نطاق التاريخ`,
  "maximumDate": `آخر تاريخ متاح`,
  "minimumDate": `أول تاريخ متاح`,
  "next": `التالي`,
  "previous": `السابق`,
  "selectedDateDescription": (args) => `تاريخ محدد: ${args.date}`,
  "selectedRangeDescription": (args) => `المدى الزمني المحدد: ${args.dateRange}`,
  "startRangeSelectionPrompt": `انقر لبدء عملية تحديد نطاق التاريخ`,
  "todayDate": (args) => `اليوم، ${args.date}`,
  "todayDateSelected": (args) => `اليوم، ${args.date} محدد`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/bg-BG.mjs
var $1830a539e98c7baf$exports = {};
$1830a539e98c7baf$exports = {
  "dateRange": (args) => `${args.startDate} до ${args.endDate}`,
  "dateSelected": (args) => `Избрано е ${args.date}`,
  "finishRangeSelectionPrompt": `Натиснете, за да довършите избора на времеви интервал`,
  "maximumDate": `Последна налична дата`,
  "minimumDate": `Първа налична дата`,
  "next": `Напред`,
  "previous": `Назад`,
  "selectedDateDescription": (args) => `Избрана дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Избран диапазон: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Натиснете, за да пристъпите към избора на времеви интервал`,
  "todayDate": (args) => `Днес, ${args.date}`,
  "todayDateSelected": (args) => `Днес, ${args.date} са избрани`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/cs-CZ.mjs
var $f4b92528965aab97$exports = {};
$f4b92528965aab97$exports = {
  "dateRange": (args) => `${args.startDate} až ${args.endDate}`,
  "dateSelected": (args) => `Vybráno ${args.date}`,
  "finishRangeSelectionPrompt": `Kliknutím dokončíte výběr rozsahu dat`,
  "maximumDate": `Poslední dostupné datum`,
  "minimumDate": `První dostupné datum`,
  "next": `Další`,
  "previous": `Předchozí`,
  "selectedDateDescription": (args) => `Vybrané datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Vybrané období: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknutím zahájíte výběr rozsahu dat`,
  "todayDate": (args) => `Dnes, ${args.date}`,
  "todayDateSelected": (args) => `Dnes, vybráno ${args.date}`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/da-DK.mjs
var $1cd578ef0547c8f1$exports = {};
$1cd578ef0547c8f1$exports = {
  "dateRange": (args) => `${args.startDate} til ${args.endDate}`,
  "dateSelected": (args) => `${args.date} valgt`,
  "finishRangeSelectionPrompt": `Klik for at fuldføre valg af datoområde`,
  "maximumDate": `Sidste ledige dato`,
  "minimumDate": `Første ledige dato`,
  "next": `Næste`,
  "previous": `Forrige`,
  "selectedDateDescription": (args) => `Valgt dato: ${args.date}`,
  "selectedRangeDescription": (args) => `Valgt interval: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klik for at starte valg af datoområde`,
  "todayDate": (args) => `I dag, ${args.date}`,
  "todayDateSelected": (args) => `I dag, ${args.date} valgt`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/de-DE.mjs
var $db55a8973925d619$exports = {};
$db55a8973925d619$exports = {
  "dateRange": (args) => `${args.startDate} bis ${args.endDate}`,
  "dateSelected": (args) => `${args.date} ausgewählt`,
  "finishRangeSelectionPrompt": `Klicken, um die Auswahl des Datumsbereichs zu beenden`,
  "maximumDate": `Letztes verfügbares Datum`,
  "minimumDate": `Erstes verfügbares Datum`,
  "next": `Weiter`,
  "previous": `Zurück`,
  "selectedDateDescription": (args) => `Ausgewähltes Datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Ausgewählter Bereich: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klicken, um die Auswahl des Datumsbereichs zu beginnen`,
  "todayDate": (args) => `Heute, ${args.date}`,
  "todayDateSelected": (args) => `Heute, ${args.date} ausgewählt`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/el-GR.mjs
var $ec6937d58566d443$exports = {};
$ec6937d58566d443$exports = {
  "dateRange": (args) => `${args.startDate} έως ${args.endDate}`,
  "dateSelected": (args) => `Επιλέχθηκε ${args.date}`,
  "finishRangeSelectionPrompt": `Κάντε κλικ για να ολοκληρώσετε την επιλογή εύρους ημερομηνιών`,
  "maximumDate": `Τελευταία διαθέσιμη ημερομηνία`,
  "minimumDate": `Πρώτη διαθέσιμη ημερομηνία`,
  "next": `Επόμενο`,
  "previous": `Προηγούμενο`,
  "selectedDateDescription": (args) => `Επιλεγμένη ημερομηνία: ${args.date}`,
  "selectedRangeDescription": (args) => `Επιλεγμένο εύρος: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Κάντε κλικ για να ξεκινήσετε την επιλογή εύρους ημερομηνιών`,
  "todayDate": (args) => `Σήμερα, ${args.date}`,
  "todayDateSelected": (args) => `Σήμερα, επιλέχτηκε ${args.date}`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/en-US.mjs
var $1f5cea0742dc284a$exports = {};
$1f5cea0742dc284a$exports = {
  "previous": `Previous`,
  "next": `Next`,
  "selectedDateDescription": (args) => `Selected Date: ${args.date}`,
  "selectedRangeDescription": (args) => `Selected Range: ${args.dateRange}`,
  "todayDate": (args) => `Today, ${args.date}`,
  "todayDateSelected": (args) => `Today, ${args.date} selected`,
  "dateSelected": (args) => `${args.date} selected`,
  "startRangeSelectionPrompt": `Click to start selecting date range`,
  "finishRangeSelectionPrompt": `Click to finish selecting date range`,
  "minimumDate": `First available date`,
  "maximumDate": `Last available date`,
  "dateRange": (args) => `${args.startDate} to ${args.endDate}`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/es-ES.mjs
var $2ca7ea366384817b$exports = {};
$2ca7ea366384817b$exports = {
  "dateRange": (args) => `${args.startDate} a ${args.endDate}`,
  "dateSelected": (args) => `${args.date} seleccionado`,
  "finishRangeSelectionPrompt": `Haga clic para terminar de seleccionar rango de fechas`,
  "maximumDate": `Última fecha disponible`,
  "minimumDate": `Primera fecha disponible`,
  "next": `Siguiente`,
  "previous": `Anterior`,
  "selectedDateDescription": (args) => `Fecha seleccionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervalo seleccionado: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Haga clic para comenzar a seleccionar un rango de fechas`,
  "todayDate": (args) => `Hoy, ${args.date}`,
  "todayDateSelected": (args) => `Hoy, ${args.date} seleccionado`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/et-EE.mjs
var $97874a7fe9cd091f$exports = {};
$97874a7fe9cd091f$exports = {
  "dateRange": (args) => `${args.startDate} kuni ${args.endDate}`,
  "dateSelected": (args) => `${args.date} valitud`,
  "finishRangeSelectionPrompt": `Klõpsake kuupäevavahemiku valimise lõpetamiseks`,
  "maximumDate": `Viimane saadaolev kuupäev`,
  "minimumDate": `Esimene saadaolev kuupäev`,
  "next": `Järgmine`,
  "previous": `Eelmine`,
  "selectedDateDescription": (args) => `Valitud kuupäev: ${args.date}`,
  "selectedRangeDescription": (args) => `Valitud vahemik: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klõpsake kuupäevavahemiku valimiseks`,
  "todayDate": (args) => `Täna, ${args.date}`,
  "todayDateSelected": (args) => `Täna, ${args.date} valitud`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/fi-FI.mjs
var $5d376b7fce1a45b2$exports = {};
$5d376b7fce1a45b2$exports = {
  "dateRange": (args) => `${args.startDate} – ${args.endDate}`,
  "dateSelected": (args) => `${args.date} valittu`,
  "finishRangeSelectionPrompt": `Lopeta päivämääräalueen valinta napsauttamalla tätä.`,
  "maximumDate": `Viimeinen varattavissa oleva päivämäärä`,
  "minimumDate": `Ensimmäinen varattavissa oleva päivämäärä`,
  "next": `Seuraava`,
  "previous": `Edellinen`,
  "selectedDateDescription": (args) => `Valittu päivämäärä: ${args.date}`,
  "selectedRangeDescription": (args) => `Valittu aikaväli: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Aloita päivämääräalueen valinta napsauttamalla tätä.`,
  "todayDate": (args) => `Tänään, ${args.date}`,
  "todayDateSelected": (args) => `Tänään, ${args.date} valittu`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/fr-FR.mjs
var $3bf722b362aaf54d$exports = {};
$3bf722b362aaf54d$exports = {
  "dateRange": (args) => `${args.startDate} à ${args.endDate}`,
  "dateSelected": (args) => `${args.date} sélectionné`,
  "finishRangeSelectionPrompt": `Cliquer pour finir de sélectionner la plage de dates`,
  "maximumDate": `Dernière date disponible`,
  "minimumDate": `Première date disponible`,
  "next": `Suivant`,
  "previous": `Précédent`,
  "selectedDateDescription": (args) => `Date sélectionnée : ${args.date}`,
  "selectedRangeDescription": (args) => `Plage sélectionnée : ${args.dateRange}`,
  "startRangeSelectionPrompt": `Cliquer pour commencer à sélectionner la plage de dates`,
  "todayDate": (args) => `Aujourd'hui, ${args.date}`,
  "todayDateSelected": (args) => `Aujourd’hui, ${args.date} sélectionné`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/he-IL.mjs
var $38c43f8322316031$exports = {};
$38c43f8322316031$exports = {
  "dateRange": (args) => `${args.startDate} עד ${args.endDate}`,
  "dateSelected": (args) => `${args.date} נבחר`,
  "finishRangeSelectionPrompt": `חץ כדי לסיים את בחירת טווח התאריכים`,
  "maximumDate": `תאריך פנוי אחרון`,
  "minimumDate": `תאריך פנוי ראשון`,
  "next": `הבא`,
  "previous": `הקודם`,
  "selectedDateDescription": (args) => `תאריך נבחר: ${args.date}`,
  "selectedRangeDescription": (args) => `טווח נבחר: ${args.dateRange}`,
  "startRangeSelectionPrompt": `לחץ כדי להתחיל בבחירת טווח התאריכים`,
  "todayDate": (args) => `היום, ${args.date}`,
  "todayDateSelected": (args) => `היום, ${args.date} נבחר`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/hr-HR.mjs
var $c90e0f32b44630bf$exports = {};
$c90e0f32b44630bf$exports = {
  "dateRange": (args) => `${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `${args.date} odabran`,
  "finishRangeSelectionPrompt": `Kliknite da dovršite raspon odabranih datuma`,
  "maximumDate": `Posljednji raspoloživi datum`,
  "minimumDate": `Prvi raspoloživi datum`,
  "next": `Sljedeći`,
  "previous": `Prethodni`,
  "selectedDateDescription": (args) => `Odabrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Odabrani raspon: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknite da započnete raspon odabranih datuma`,
  "todayDate": (args) => `Danas, ${args.date}`,
  "todayDateSelected": (args) => `Danas, odabran ${args.date}`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/hu-HU.mjs
var $715875e6e7a338f4$exports = {};
$715875e6e7a338f4$exports = {
  "dateRange": (args) => `${args.startDate}–${args.endDate}`,
  "dateSelected": (args) => `${args.date} kiválasztva`,
  "finishRangeSelectionPrompt": `Kattintson a dátumtartomány kijelölésének befejezéséhez`,
  "maximumDate": `Utolsó elérhető dátum`,
  "minimumDate": `Az első elérhető dátum`,
  "next": `Következő`,
  "previous": `Előző`,
  "selectedDateDescription": (args) => `Kijelölt dátum: ${args.date}`,
  "selectedRangeDescription": (args) => `Kijelölt tartomány: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kattintson a dátumtartomány kijelölésének indításához`,
  "todayDate": (args) => `Ma, ${args.date}`,
  "todayDateSelected": (args) => `Ma, ${args.date} kijelölve`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/it-IT.mjs
var $37d77c66e34daccf$exports = {};
$37d77c66e34daccf$exports = {
  "dateRange": (args) => `Da ${args.startDate} a ${args.endDate}`,
  "dateSelected": (args) => `${args.date} selezionata`,
  "finishRangeSelectionPrompt": `Fai clic per completare la selezione dell’intervallo di date`,
  "maximumDate": `Ultima data disponibile`,
  "minimumDate": `Prima data disponibile`,
  "next": `Successivo`,
  "previous": `Precedente`,
  "selectedDateDescription": (args) => `Data selezionata: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervallo selezionato: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Fai clic per selezionare l’intervallo di date`,
  "todayDate": (args) => `Oggi, ${args.date}`,
  "todayDateSelected": (args) => `Oggi, ${args.date} selezionata`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/ja-JP.mjs
var $542f39aee29303c3$exports = {};
$542f39aee29303c3$exports = {
  "dateRange": (args) => `${args.startDate} から ${args.endDate}`,
  "dateSelected": (args) => `${args.date} を選択`,
  "finishRangeSelectionPrompt": `クリックして日付範囲の選択を終了`,
  "maximumDate": `最終利用可能日`,
  "minimumDate": `最初の利用可能日`,
  "next": `次へ`,
  "previous": `前へ`,
  "selectedDateDescription": (args) => `選択した日付 : ${args.date}`,
  "selectedRangeDescription": (args) => `選択範囲 : ${args.dateRange}`,
  "startRangeSelectionPrompt": `クリックして日付範囲の選択を開始`,
  "todayDate": (args) => `本日、${args.date}`,
  "todayDateSelected": (args) => `本日、${args.date} を選択`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/ko-KR.mjs
var $22a5f0623ea73e4f$exports = {};
$22a5f0623ea73e4f$exports = {
  "dateRange": (args) => `${args.startDate} ~ ${args.endDate}`,
  "dateSelected": (args) => `${args.date} 선택됨`,
  "finishRangeSelectionPrompt": `날짜 범위 선택을 완료하려면 클릭하십시오.`,
  "maximumDate": `마지막으로 사용 가능한 일자`,
  "minimumDate": `처음으로 사용 가능한 일자`,
  "next": `다음`,
  "previous": `이전`,
  "selectedDateDescription": (args) => `선택 일자: ${args.date}`,
  "selectedRangeDescription": (args) => `선택 범위: ${args.dateRange}`,
  "startRangeSelectionPrompt": `날짜 범위 선택을 시작하려면 클릭하십시오.`,
  "todayDate": (args) => `오늘, ${args.date}`,
  "todayDateSelected": (args) => `오늘, ${args.date} 선택됨`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/lt-LT.mjs
var $522380d13d62cba0$exports = {};
$522380d13d62cba0$exports = {
  "dateRange": (args) => `Nuo ${args.startDate} iki ${args.endDate}`,
  "dateSelected": (args) => `Pasirinkta ${args.date}`,
  "finishRangeSelectionPrompt": `Spustelėkite, kad baigtumėte pasirinkti datų intervalą`,
  "maximumDate": `Paskutinė galima data`,
  "minimumDate": `Pirmoji galima data`,
  "next": `Paskesnis`,
  "previous": `Ankstesnis`,
  "selectedDateDescription": (args) => `Pasirinkta data: ${args.date}`,
  "selectedRangeDescription": (args) => `Pasirinktas intervalas: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Spustelėkite, kad pradėtumėte pasirinkti datų intervalą`,
  "todayDate": (args) => `Šiandien, ${args.date}`,
  "todayDateSelected": (args) => `Šiandien, pasirinkta ${args.date}`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/lv-LV.mjs
var $8a7bc830b2fe6485$exports = {};
$8a7bc830b2fe6485$exports = {
  "dateRange": (args) => `No ${args.startDate} līdz ${args.endDate}`,
  "dateSelected": (args) => `Atlasīts: ${args.date}`,
  "finishRangeSelectionPrompt": `Noklikšķiniet, lai pabeigtu datumu diapazona atlasi`,
  "maximumDate": `Pēdējais pieejamais datums`,
  "minimumDate": `Pirmais pieejamais datums`,
  "next": `Tālāk`,
  "previous": `Atpakaļ`,
  "selectedDateDescription": (args) => `Atlasītais datums: ${args.date}`,
  "selectedRangeDescription": (args) => `Atlasītais diapazons: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Noklikšķiniet, lai sāktu datumu diapazona atlasi`,
  "todayDate": (args) => `Šodien, ${args.date}`,
  "todayDateSelected": (args) => `Atlasīta šodiena, ${args.date}`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/nb-NO.mjs
var $9fac9c044470683b$exports = {};
$9fac9c044470683b$exports = {
  "dateRange": (args) => `${args.startDate} til ${args.endDate}`,
  "dateSelected": (args) => `${args.date} valgt`,
  "finishRangeSelectionPrompt": `Klikk for å fullføre valg av datoområde`,
  "maximumDate": `Siste tilgjengelige dato`,
  "minimumDate": `Første tilgjengelige dato`,
  "next": `Neste`,
  "previous": `Forrige`,
  "selectedDateDescription": (args) => `Valgt dato: ${args.date}`,
  "selectedRangeDescription": (args) => `Valgt område: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klikk for å starte valg av datoområde`,
  "todayDate": (args) => `I dag, ${args.date}`,
  "todayDateSelected": (args) => `I dag, ${args.date} valgt`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/nl-NL.mjs
var $b127d3569efb1449$exports = {};
$b127d3569efb1449$exports = {
  "dateRange": (args) => `${args.startDate} tot ${args.endDate}`,
  "dateSelected": (args) => `${args.date} geselecteerd`,
  "finishRangeSelectionPrompt": `Klik om de selectie van het datumbereik te voltooien`,
  "maximumDate": `Laatste beschikbare datum`,
  "minimumDate": `Eerste beschikbare datum`,
  "next": `Volgende`,
  "previous": `Vorige`,
  "selectedDateDescription": (args) => `Geselecteerde datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Geselecteerd bereik: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klik om het datumbereik te selecteren`,
  "todayDate": (args) => `Vandaag, ${args.date}`,
  "todayDateSelected": (args) => `Vandaag, ${args.date} geselecteerd`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/pl-PL.mjs
var $51404a4090633490$exports = {};
$51404a4090633490$exports = {
  "dateRange": (args) => `${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `Wybrano ${args.date}`,
  "finishRangeSelectionPrompt": `Kliknij, aby zakończyć wybór zakresu dat`,
  "maximumDate": `Ostatnia dostępna data`,
  "minimumDate": `Pierwsza dostępna data`,
  "next": `Dalej`,
  "previous": `Wstecz`,
  "selectedDateDescription": (args) => `Wybrana data: ${args.date}`,
  "selectedRangeDescription": (args) => `Wybrany zakres: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknij, aby rozpocząć wybór zakresu dat`,
  "todayDate": (args) => `Dzisiaj, ${args.date}`,
  "todayDateSelected": (args) => `Dzisiaj wybrano ${args.date}`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/pt-BR.mjs
var $e5e6a3fe3b4527df$exports = {};
$e5e6a3fe3b4527df$exports = {
  "dateRange": (args) => `${args.startDate} a ${args.endDate}`,
  "dateSelected": (args) => `${args.date} selecionado`,
  "finishRangeSelectionPrompt": `Clique para concluir a seleção do intervalo de datas`,
  "maximumDate": `Última data disponível`,
  "minimumDate": `Primeira data disponível`,
  "next": `Próximo`,
  "previous": `Anterior`,
  "selectedDateDescription": (args) => `Data selecionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervalo selecionado: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Clique para iniciar a seleção do intervalo de datas`,
  "todayDate": (args) => `Hoje, ${args.date}`,
  "todayDateSelected": (args) => `Hoje, ${args.date} selecionado`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/pt-PT.mjs
var $c519dcadcbb1ee47$exports = {};
$c519dcadcbb1ee47$exports = {
  "dateRange": (args) => `${args.startDate} a ${args.endDate}`,
  "dateSelected": (args) => `${args.date} selecionado`,
  "finishRangeSelectionPrompt": `Clique para terminar de selecionar o intervalo de datas`,
  "maximumDate": `Última data disponível`,
  "minimumDate": `Primeira data disponível`,
  "next": `Próximo`,
  "previous": `Anterior`,
  "selectedDateDescription": (args) => `Data selecionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervalo selecionado: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Clique para começar a selecionar o intervalo de datas`,
  "todayDate": (args) => `Hoje, ${args.date}`,
  "todayDateSelected": (args) => `Hoje, ${args.date} selecionado`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/ro-RO.mjs
var $e5aa0186ca7889c6$exports = {};
$e5aa0186ca7889c6$exports = {
  "dateRange": (args) => `De la ${args.startDate} până la ${args.endDate}`,
  "dateSelected": (args) => `${args.date} selectată`,
  "finishRangeSelectionPrompt": `Apăsaţi pentru a finaliza selecţia razei pentru dată`,
  "maximumDate": `Ultima dată disponibilă`,
  "minimumDate": `Prima dată disponibilă`,
  "next": `Următorul`,
  "previous": `Înainte`,
  "selectedDateDescription": (args) => `Dată selectată: ${args.date}`,
  "selectedRangeDescription": (args) => `Interval selectat: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Apăsaţi pentru a începe selecţia razei pentru dată`,
  "todayDate": (args) => `Astăzi, ${args.date}`,
  "todayDateSelected": (args) => `Azi, ${args.date} selectată`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/ru-RU.mjs
var $5b907f5fa3eee652$exports = {};
$5b907f5fa3eee652$exports = {
  "dateRange": (args) => `С ${args.startDate} по ${args.endDate}`,
  "dateSelected": (args) => `Выбрано ${args.date}`,
  "finishRangeSelectionPrompt": `Щелкните, чтобы завершить выбор диапазона дат`,
  "maximumDate": `Последняя доступная дата`,
  "minimumDate": `Первая доступная дата`,
  "next": `Далее`,
  "previous": `Назад`,
  "selectedDateDescription": (args) => `Выбранная дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Выбранный диапазон: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Щелкните, чтобы начать выбор диапазона дат`,
  "todayDate": (args) => `Сегодня, ${args.date}`,
  "todayDateSelected": (args) => `Сегодня, выбрано ${args.date}`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/sk-SK.mjs
var $1b4c51359c99cf79$exports = {};
$1b4c51359c99cf79$exports = {
  "dateRange": (args) => `Od ${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `Vybratý dátum ${args.date}`,
  "finishRangeSelectionPrompt": `Kliknutím dokončíte výber rozsahu dátumov`,
  "maximumDate": `Posledný dostupný dátum`,
  "minimumDate": `Prvý dostupný dátum`,
  "next": `Nasledujúce`,
  "previous": `Predchádzajúce`,
  "selectedDateDescription": (args) => `Vybratý dátum: ${args.date}`,
  "selectedRangeDescription": (args) => `Vybratý rozsah: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknutím spustíte výber rozsahu dátumov`,
  "todayDate": (args) => `Dnes ${args.date}`,
  "todayDateSelected": (args) => `Vybratý dnešný dátum ${args.date}`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/sl-SI.mjs
var $02e4e6a4608cc6f3$exports = {};
$02e4e6a4608cc6f3$exports = {
  "dateRange": (args) => `${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `${args.date} izbrano`,
  "finishRangeSelectionPrompt": `Kliknite za dokončanje izbire datumskega obsega`,
  "maximumDate": `Zadnji razpoložljivi datum`,
  "minimumDate": `Prvi razpoložljivi datum`,
  "next": `Naprej`,
  "previous": `Nazaj`,
  "selectedDateDescription": (args) => `Izbrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Izbrano območje: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknite za začetek izbire datumskega obsega`,
  "todayDate": (args) => `Danes, ${args.date}`,
  "todayDateSelected": (args) => `Danes, ${args.date} izbrano`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/sr-SP.mjs
var $6dd2fbaad93b6878$exports = {};
$6dd2fbaad93b6878$exports = {
  "dateRange": (args) => `${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `${args.date} izabran`,
  "finishRangeSelectionPrompt": `Kliknite da dovršite opseg izabranih datuma`,
  "maximumDate": `Zadnji raspoloživi datum`,
  "minimumDate": `Prvi raspoloživi datum`,
  "next": `Sledeći`,
  "previous": `Prethodni`,
  "selectedDateDescription": (args) => `Izabrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Izabrani period: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknite da započnete opseg izabranih datuma`,
  "todayDate": (args) => `Danas, ${args.date}`,
  "todayDateSelected": (args) => `Danas, izabran ${args.date}`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/sv-SE.mjs
var $33ea59bfe6e804e0$exports = {};
$33ea59bfe6e804e0$exports = {
  "dateRange": (args) => `${args.startDate} till ${args.endDate}`,
  "dateSelected": (args) => `${args.date} har valts`,
  "finishRangeSelectionPrompt": `Klicka för att avsluta val av datumintervall`,
  "maximumDate": `Sista tillgängliga datum`,
  "minimumDate": `Första tillgängliga datum`,
  "next": `Nästa`,
  "previous": `Föregående`,
  "selectedDateDescription": (args) => `Valt datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Valt intervall: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klicka för att välja datumintervall`,
  "todayDate": (args) => `Idag, ${args.date}`,
  "todayDateSelected": (args) => `Idag, ${args.date} har valts`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/tr-TR.mjs
var $4603b0d0246969b2$exports = {};
$4603b0d0246969b2$exports = {
  "dateRange": (args) => `${args.startDate} - ${args.endDate}`,
  "dateSelected": (args) => `${args.date} seçildi`,
  "finishRangeSelectionPrompt": `Tarih aralığı seçimini tamamlamak için tıklayın`,
  "maximumDate": `Son müsait tarih`,
  "minimumDate": `İlk müsait tarih`,
  "next": `Sonraki`,
  "previous": `Önceki`,
  "selectedDateDescription": (args) => `Seçilen Tarih: ${args.date}`,
  "selectedRangeDescription": (args) => `Seçilen Aralık: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Tarih aralığı seçimini başlatmak için tıklayın`,
  "todayDate": (args) => `Bugün, ${args.date}`,
  "todayDateSelected": (args) => `Bugün, ${args.date} seçildi`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/uk-UA.mjs
var $82649816f530bb1b$exports = {};
$82649816f530bb1b$exports = {
  "dateRange": (args) => `${args.startDate} — ${args.endDate}`,
  "dateSelected": (args) => `Вибрано ${args.date}`,
  "finishRangeSelectionPrompt": `Натисніть, щоб завершити вибір діапазону дат`,
  "maximumDate": `Остання доступна дата`,
  "minimumDate": `Перша доступна дата`,
  "next": `Наступний`,
  "previous": `Попередній`,
  "selectedDateDescription": (args) => `Вибрана дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Вибраний діапазон: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Натисніть, щоб почати вибір діапазону дат`,
  "todayDate": (args) => `Сьогодні, ${args.date}`,
  "todayDateSelected": (args) => `Сьогодні, вибрано ${args.date}`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/zh-CN.mjs
var $628e140a43dfb330$exports = {};
$628e140a43dfb330$exports = {
  "dateRange": (args) => `${args.startDate} 至 ${args.endDate}`,
  "dateSelected": (args) => `已选择 ${args.date}`,
  "finishRangeSelectionPrompt": `单击以完成选择日期范围`,
  "maximumDate": `最后一个可用日期`,
  "minimumDate": `第一个可用日期`,
  "next": `下一页`,
  "previous": `上一页`,
  "selectedDateDescription": (args) => `选定的日期：${args.date}`,
  "selectedRangeDescription": (args) => `选定的范围：${args.dateRange}`,
  "startRangeSelectionPrompt": `单击以开始选择日期范围`,
  "todayDate": (args) => `今天，即 ${args.date}`,
  "todayDateSelected": (args) => `已选择今天，即 ${args.date}`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/zh-TW.mjs
var $745937250cd4679c$exports = {};
$745937250cd4679c$exports = {
  "dateRange": (args) => `${args.startDate} 至 ${args.endDate}`,
  "dateSelected": (args) => `已選取 ${args.date}`,
  "finishRangeSelectionPrompt": `按一下以完成選取日期範圍`,
  "maximumDate": `最後一個可用日期`,
  "minimumDate": `第一個可用日期`,
  "next": `下一頁`,
  "previous": `上一頁`,
  "selectedDateDescription": (args) => `選定的日期：${args.date}`,
  "selectedRangeDescription": (args) => `選定的範圍：${args.dateRange}`,
  "startRangeSelectionPrompt": `按一下以開始選取日期範圍`,
  "todayDate": (args) => `今天，${args.date}`,
  "todayDateSelected": (args) => `已選取今天，${args.date}`
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/intlStrings.mjs
var $3904726b442bd9b2$exports = {};
$3904726b442bd9b2$exports = {
  "ar-AE": $39324ace0d945f59$exports,
  "bg-BG": $1830a539e98c7baf$exports,
  "cs-CZ": $f4b92528965aab97$exports,
  "da-DK": $1cd578ef0547c8f1$exports,
  "de-DE": $db55a8973925d619$exports,
  "el-GR": $ec6937d58566d443$exports,
  "en-US": $1f5cea0742dc284a$exports,
  "es-ES": $2ca7ea366384817b$exports,
  "et-EE": $97874a7fe9cd091f$exports,
  "fi-FI": $5d376b7fce1a45b2$exports,
  "fr-FR": $3bf722b362aaf54d$exports,
  "he-IL": $38c43f8322316031$exports,
  "hr-HR": $c90e0f32b44630bf$exports,
  "hu-HU": $715875e6e7a338f4$exports,
  "it-IT": $37d77c66e34daccf$exports,
  "ja-JP": $542f39aee29303c3$exports,
  "ko-KR": $22a5f0623ea73e4f$exports,
  "lt-LT": $522380d13d62cba0$exports,
  "lv-LV": $8a7bc830b2fe6485$exports,
  "nb-NO": $9fac9c044470683b$exports,
  "nl-NL": $b127d3569efb1449$exports,
  "pl-PL": $51404a4090633490$exports,
  "pt-BR": $e5e6a3fe3b4527df$exports,
  "pt-PT": $c519dcadcbb1ee47$exports,
  "ro-RO": $e5aa0186ca7889c6$exports,
  "ru-RU": $5b907f5fa3eee652$exports,
  "sk-SK": $1b4c51359c99cf79$exports,
  "sl-SI": $02e4e6a4608cc6f3$exports,
  "sr-SP": $6dd2fbaad93b6878$exports,
  "sv-SE": $33ea59bfe6e804e0$exports,
  "tr-TR": $4603b0d0246969b2$exports,
  "uk-UA": $82649816f530bb1b$exports,
  "zh-CN": $628e140a43dfb330$exports,
  "zh-TW": $745937250cd4679c$exports
};

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/utils.mjs
var import_react = __toESM(require_react(), 1);
function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
var $a074e1e2d0f0a665$export$653eddfc964b0f8a = /* @__PURE__ */ new WeakMap();
function $a074e1e2d0f0a665$export$134cbb7fb09a9522(date) {
  return (date === null || date === void 0 ? void 0 : date.calendar.identifier) === "gregory" && date.era === "BC" ? "short" : void 0;
}
function $a074e1e2d0f0a665$export$b6df97c887c38e1a(state) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault($3904726b442bd9b2$exports)), "@react-aria/calendar");
  let start, end;
  if ("highlightedRange" in state)
    ({ start, end } = state.highlightedRange || {});
  else
    start = end = state.value;
  let dateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    weekday: "long",
    month: "long",
    year: "numeric",
    day: "numeric",
    era: $a074e1e2d0f0a665$export$134cbb7fb09a9522(start) || $a074e1e2d0f0a665$export$134cbb7fb09a9522(end),
    timeZone: state.timeZone
  });
  let anchorDate = "anchorDate" in state ? state.anchorDate : null;
  return (0, import_react.useMemo)(() => {
    if (!anchorDate && start && end) {
      if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(start, end)) {
        let date = dateFormatter.format(start.toDate(state.timeZone));
        return stringFormatter.format("selectedDateDescription", {
          date
        });
      } else {
        let dateRange = $a074e1e2d0f0a665$var$formatRange(dateFormatter, stringFormatter, start, end, state.timeZone);
        return stringFormatter.format("selectedRangeDescription", {
          dateRange
        });
      }
    }
    return "";
  }, [
    start,
    end,
    anchorDate,
    state.timeZone,
    stringFormatter,
    dateFormatter
  ]);
}
function $a074e1e2d0f0a665$export$31afe65d91ef6e8(startDate, endDate, timeZone, isAria) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault($3904726b442bd9b2$exports)), "@react-aria/calendar");
  let era = $a074e1e2d0f0a665$export$134cbb7fb09a9522(startDate) || $a074e1e2d0f0a665$export$134cbb7fb09a9522(endDate);
  let monthFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    month: "long",
    year: "numeric",
    era,
    calendar: startDate.calendar.identifier,
    timeZone
  });
  let dateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    month: "long",
    year: "numeric",
    day: "numeric",
    era,
    calendar: startDate.calendar.identifier,
    timeZone
  });
  return (0, import_react.useMemo)(() => {
    if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(startDate, (0, $14e0f24ef4ac5c92$export$a5a3b454ada2268e)(startDate))) {
      if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(endDate, (0, $14e0f24ef4ac5c92$export$a2258d9c4118825c)(startDate)))
        return monthFormatter.format(startDate.toDate(timeZone));
      else if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(endDate, (0, $14e0f24ef4ac5c92$export$a2258d9c4118825c)(endDate)))
        return isAria ? $a074e1e2d0f0a665$var$formatRange(monthFormatter, stringFormatter, startDate, endDate, timeZone) : monthFormatter.formatRange(startDate.toDate(timeZone), endDate.toDate(timeZone));
    }
    return isAria ? $a074e1e2d0f0a665$var$formatRange(dateFormatter, stringFormatter, startDate, endDate, timeZone) : dateFormatter.formatRange(startDate.toDate(timeZone), endDate.toDate(timeZone));
  }, [
    startDate,
    endDate,
    monthFormatter,
    dateFormatter,
    stringFormatter,
    timeZone,
    isAria
  ]);
}
function $a074e1e2d0f0a665$var$formatRange(dateFormatter, stringFormatter, start, end, timeZone) {
  let parts = dateFormatter.formatRangeToParts(start.toDate(timeZone), end.toDate(timeZone));
  let separatorIndex = -1;
  for (let i = 0; i < parts.length; i++) {
    let part = parts[i];
    if (part.source === "shared" && part.type === "literal")
      separatorIndex = i;
    else if (part.source === "endRange")
      break;
  }
  let startValue = "";
  let endValue = "";
  for (let i = 0; i < parts.length; i++) {
    if (i < separatorIndex)
      startValue += parts[i].value;
    else if (i > separatorIndex)
      endValue += parts[i].value;
  }
  return stringFormatter.format("dateRange", {
    startDate: startValue,
    endDate: endValue
  });
}

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/useCalendarBase.mjs
var import_react2 = __toESM(require_react(), 1);
function $parcel$interopDefault2(a) {
  return a && a.__esModule ? a.default : a;
}
function $c4acc1de3ab169cf$export$d652b3ea2d672d5b(props, state) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault2($3904726b442bd9b2$exports)), "@react-aria/calendar");
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  let title = (0, $a074e1e2d0f0a665$export$31afe65d91ef6e8)(state.visibleRange.start, state.visibleRange.end, state.timeZone, false);
  let visibleRangeDescription = (0, $a074e1e2d0f0a665$export$31afe65d91ef6e8)(state.visibleRange.start, state.visibleRange.end, state.timeZone, true);
  (0, $4f58c5f72bcf79f7$export$496315a1608d9602)(() => {
    if (!state.isFocused)
      (0, $319e236875307eab$export$a9b970dcc4ae71a9)(visibleRangeDescription);
  }, [
    visibleRangeDescription
  ]);
  let selectedDateDescription = (0, $a074e1e2d0f0a665$export$b6df97c887c38e1a)(state);
  (0, $4f58c5f72bcf79f7$export$496315a1608d9602)(() => {
    if (selectedDateDescription)
      (0, $319e236875307eab$export$a9b970dcc4ae71a9)(selectedDateDescription, "polite", 4e3);
  }, [
    selectedDateDescription
  ]);
  let errorMessageId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)([
    Boolean(props.errorMessage),
    props.isInvalid,
    props.validationState
  ]);
  (0, $a074e1e2d0f0a665$export$653eddfc964b0f8a).set(state, {
    ariaLabel: props["aria-label"],
    ariaLabelledBy: props["aria-labelledby"],
    errorMessageId,
    selectedDateDescription
  });
  let [nextFocused, setNextFocused] = (0, import_react2.useState)(false);
  let nextDisabled = props.isDisabled || state.isNextVisibleRangeInvalid();
  if (nextDisabled && nextFocused) {
    setNextFocused(false);
    state.setFocused(true);
  }
  let [previousFocused, setPreviousFocused] = (0, import_react2.useState)(false);
  let previousDisabled = props.isDisabled || state.isPreviousVisibleRangeInvalid();
  if (previousDisabled && previousFocused) {
    setPreviousFocused(false);
    state.setFocused(true);
  }
  let labelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    id: props["id"],
    "aria-label": [
      props["aria-label"],
      visibleRangeDescription
    ].filter(Boolean).join(", "),
    "aria-labelledby": props["aria-labelledby"]
  });
  return {
    calendarProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, labelProps, {
      role: "application",
      "aria-describedby": props["aria-describedby"] || void 0
    }),
    nextButtonProps: {
      onPress: () => state.focusNextPage(),
      "aria-label": stringFormatter.format("next"),
      isDisabled: nextDisabled,
      onFocusChange: setNextFocused
    },
    prevButtonProps: {
      onPress: () => state.focusPreviousPage(),
      "aria-label": stringFormatter.format("previous"),
      isDisabled: previousDisabled,
      onFocusChange: setPreviousFocused
    },
    errorMessageProps: {
      id: errorMessageId
    },
    title
  };
}

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/useCalendar.mjs
function $9942cad8a072a530$export$3ee915f8151bd4f1(props, state) {
  return (0, $c4acc1de3ab169cf$export$d652b3ea2d672d5b)(props, state);
}

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/useRangeCalendar.mjs
var import_react3 = __toESM(require_react(), 1);
function $46a4342aab3d8076$export$87e0539f600c24e5(props, state, ref) {
  let res = (0, $c4acc1de3ab169cf$export$d652b3ea2d672d5b)(props, state);
  let isVirtualClick = (0, import_react3.useRef)(false);
  let windowRef = (0, import_react3.useRef)(typeof window !== "undefined" ? window : null);
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(windowRef, "pointerdown", (e) => {
    isVirtualClick.current = e.width === 0 && e.height === 0;
  });
  let endDragging = (e) => {
    if (isVirtualClick.current) {
      isVirtualClick.current = false;
      return;
    }
    state.setDragging(false);
    if (!state.anchorDate)
      return;
    let target = e.target;
    if (ref.current && ref.current.contains(document.activeElement) && (!ref.current.contains(target) || !target.closest('button, [role="button"]')))
      state.selectFocusedDate();
  };
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(windowRef, "pointerup", endDragging);
  res.calendarProps.onBlur = (e) => {
    if (!ref.current)
      return;
    if ((!e.relatedTarget || !ref.current.contains(e.relatedTarget)) && state.anchorDate)
      state.selectFocusedDate();
  };
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(ref, "touchmove", (e) => {
    if (state.isDragging)
      e.preventDefault();
  }, {
    passive: false,
    capture: true
  });
  return res;
}

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/useCalendarGrid.mjs
var import_react4 = __toESM(require_react(), 1);
function $e3031d1f8c9d64eb$export$cb95147730a423f5(props, state) {
  let { startDate = state.visibleRange.start, endDate = state.visibleRange.end } = props;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let onKeyDown = (e) => {
    switch (e.key) {
      case "Enter":
      case " ":
        e.preventDefault();
        state.selectFocusedDate();
        break;
      case "PageUp":
        e.preventDefault();
        e.stopPropagation();
        state.focusPreviousSection(e.shiftKey);
        break;
      case "PageDown":
        e.preventDefault();
        e.stopPropagation();
        state.focusNextSection(e.shiftKey);
        break;
      case "End":
        e.preventDefault();
        e.stopPropagation();
        state.focusSectionEnd();
        break;
      case "Home":
        e.preventDefault();
        e.stopPropagation();
        state.focusSectionStart();
        break;
      case "ArrowLeft":
        e.preventDefault();
        e.stopPropagation();
        if (direction === "rtl")
          state.focusNextDay();
        else
          state.focusPreviousDay();
        break;
      case "ArrowUp":
        e.preventDefault();
        e.stopPropagation();
        state.focusPreviousRow();
        break;
      case "ArrowRight":
        e.preventDefault();
        e.stopPropagation();
        if (direction === "rtl")
          state.focusPreviousDay();
        else
          state.focusNextDay();
        break;
      case "ArrowDown":
        e.preventDefault();
        e.stopPropagation();
        state.focusNextRow();
        break;
      case "Escape":
        if ("setAnchorDate" in state) {
          e.preventDefault();
          state.setAnchorDate(null);
        }
        break;
    }
  };
  let visibleRangeDescription = (0, $a074e1e2d0f0a665$export$31afe65d91ef6e8)(startDate, endDate, state.timeZone, true);
  let { ariaLabel, ariaLabelledBy } = (0, $a074e1e2d0f0a665$export$653eddfc964b0f8a).get(state);
  let labelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    "aria-label": [
      ariaLabel,
      visibleRangeDescription
    ].filter(Boolean).join(", "),
    "aria-labelledby": ariaLabelledBy
  });
  let dayFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    weekday: props.weekdayStyle || "narrow",
    timeZone: state.timeZone
  });
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let weekDays = (0, import_react4.useMemo)(() => {
    let weekStart = (0, $14e0f24ef4ac5c92$export$42c81a444fbfb5d4)((0, $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3)(state.timeZone), locale);
    return [
      ...new Array(7).keys()
    ].map((index) => {
      let date = weekStart.add({
        days: index
      });
      let dateDay = date.toDate(state.timeZone);
      return dayFormatter.format(dateDay);
    });
  }, [
    locale,
    state.timeZone,
    dayFormatter
  ]);
  return {
    gridProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(labelProps, {
      role: "grid",
      "aria-readonly": state.isReadOnly || null,
      "aria-disabled": state.isDisabled || null,
      "aria-multiselectable": "highlightedRange" in state || void 0,
      onKeyDown,
      onFocus: () => state.setFocused(true),
      onBlur: () => state.setFocused(false)
    }),
    headerProps: {
      // Column headers are hidden to screen readers to make navigating with a touch screen reader easier.
      // The day names are already included in the label of each cell, so there's no need to announce them twice.
      "aria-hidden": true
    },
    weekDays
  };
}

// ../../node_modules/.pnpm/@react-aria+calendar@3.5.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/calendar/dist/useCalendarCell.mjs
var import_react5 = __toESM(require_react(), 1);
function $parcel$interopDefault3(a) {
  return a && a.__esModule ? a.default : a;
}
function $36a0ac60f04457c5$export$136073280381448e(props, state, ref) {
  let { date, isDisabled } = props;
  let { errorMessageId, selectedDateDescription } = (0, $a074e1e2d0f0a665$export$653eddfc964b0f8a).get(state);
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault3($3904726b442bd9b2$exports)), "@react-aria/calendar");
  let dateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    weekday: "long",
    day: "numeric",
    month: "long",
    year: "numeric",
    era: (0, $a074e1e2d0f0a665$export$134cbb7fb09a9522)(date),
    timeZone: state.timeZone
  });
  let isSelected = state.isSelected(date);
  let isFocused = state.isCellFocused(date);
  isDisabled = isDisabled || state.isCellDisabled(date);
  let isUnavailable = state.isCellUnavailable(date);
  let isSelectable = !isDisabled && !isUnavailable;
  let isInvalid = state.isValueInvalid && ("highlightedRange" in state ? !state.anchorDate && state.highlightedRange && date.compare(state.highlightedRange.start) >= 0 && date.compare(state.highlightedRange.end) <= 0 : state.value && (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(state.value, date));
  if (isInvalid)
    isSelected = true;
  date = (0, $5a387cc49350e6db$export$722debc0e56fea39)(date, (0, $14e0f24ef4ac5c92$export$91b62ebf2ba703ee));
  let nativeDate = (0, import_react5.useMemo)(() => date.toDate(state.timeZone), [
    date,
    state.timeZone
  ]);
  let isDateToday = (0, $14e0f24ef4ac5c92$export$629b0a497aa65267)(date, state.timeZone);
  let label = (0, import_react5.useMemo)(() => {
    let label2 = "";
    if ("highlightedRange" in state && state.value && !state.anchorDate && ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.value.start) || (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.value.end)))
      label2 = selectedDateDescription + ", ";
    label2 += dateFormatter.format(nativeDate);
    if (isDateToday)
      label2 = stringFormatter.format(isSelected ? "todayDateSelected" : "todayDate", {
        date: label2
      });
    else if (isSelected)
      label2 = stringFormatter.format("dateSelected", {
        date: label2
      });
    if (state.minValue && (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.minValue))
      label2 += ", " + stringFormatter.format("minimumDate");
    else if (state.maxValue && (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.maxValue))
      label2 += ", " + stringFormatter.format("maximumDate");
    return label2;
  }, [
    dateFormatter,
    nativeDate,
    stringFormatter,
    isSelected,
    isDateToday,
    date,
    state,
    selectedDateDescription
  ]);
  let rangeSelectionPrompt = "";
  if ("anchorDate" in state && isFocused && !state.isReadOnly && isSelectable) {
    if (state.anchorDate)
      rangeSelectionPrompt = stringFormatter.format("finishRangeSelectionPrompt");
    else
      rangeSelectionPrompt = stringFormatter.format("startRangeSelectionPrompt");
  }
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(rangeSelectionPrompt);
  let isAnchorPressed = (0, import_react5.useRef)(false);
  let isRangeBoundaryPressed = (0, import_react5.useRef)(false);
  let touchDragTimerRef = (0, import_react5.useRef)(null);
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    // When dragging to select a range, we don't want dragging over the original anchor
    // again to trigger onPressStart. Cancel presses immediately when the pointer exits.
    shouldCancelOnPointerExit: "anchorDate" in state && !!state.anchorDate,
    preventFocusOnPress: true,
    isDisabled: !isSelectable || state.isReadOnly,
    onPressStart(e) {
      if (state.isReadOnly) {
        state.setFocusedDate(date);
        return;
      }
      if ("highlightedRange" in state && !state.anchorDate && (e.pointerType === "mouse" || e.pointerType === "touch")) {
        if (state.highlightedRange && !isInvalid) {
          if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.highlightedRange.start)) {
            state.setAnchorDate(state.highlightedRange.end);
            state.setFocusedDate(date);
            state.setDragging(true);
            isRangeBoundaryPressed.current = true;
            return;
          } else if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.highlightedRange.end)) {
            state.setAnchorDate(state.highlightedRange.start);
            state.setFocusedDate(date);
            state.setDragging(true);
            isRangeBoundaryPressed.current = true;
            return;
          }
        }
        let startDragging = () => {
          state.setDragging(true);
          touchDragTimerRef.current = null;
          state.selectDate(date);
          state.setFocusedDate(date);
          isAnchorPressed.current = true;
        };
        if (e.pointerType === "touch")
          touchDragTimerRef.current = setTimeout(startDragging, 200);
        else
          startDragging();
      }
    },
    onPressEnd() {
      isRangeBoundaryPressed.current = false;
      isAnchorPressed.current = false;
      clearTimeout(touchDragTimerRef.current);
      touchDragTimerRef.current = null;
    },
    onPress() {
      if (!("anchorDate" in state) && !state.isReadOnly) {
        state.selectDate(date);
        state.setFocusedDate(date);
      }
    },
    onPressUp(e) {
      if (state.isReadOnly)
        return;
      if ("anchorDate" in state && touchDragTimerRef.current) {
        state.selectDate(date);
        state.setFocusedDate(date);
      }
      if ("anchorDate" in state) {
        if (isRangeBoundaryPressed.current)
          state.setAnchorDate(date);
        else if (state.anchorDate && !isAnchorPressed.current) {
          state.selectDate(date);
          state.setFocusedDate(date);
        } else if (e.pointerType === "keyboard" && !state.anchorDate) {
          state.selectDate(date);
          let nextDay = date.add({
            days: 1
          });
          if (state.isInvalid(nextDay))
            nextDay = date.subtract({
              days: 1
            });
          if (!state.isInvalid(nextDay))
            state.setFocusedDate(nextDay);
        } else if (e.pointerType === "virtual") {
          state.selectDate(date);
          state.setFocusedDate(date);
        }
      }
    }
  });
  let tabIndex = null;
  if (!isDisabled)
    tabIndex = (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.focusedDate) ? 0 : -1;
  (0, import_react5.useEffect)(() => {
    if (isFocused && ref.current) {
      (0, $7215afc6de606d6b$export$de79e2c695e052f3)(ref.current);
      if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a9)() !== "pointer" && document.activeElement === ref.current)
        (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(ref.current, {
          containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
        });
    }
  }, [
    isFocused,
    ref
  ]);
  let cellDateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    day: "numeric",
    timeZone: state.timeZone,
    calendar: date.calendar.identifier
  });
  let formattedDate = (0, import_react5.useMemo)(() => cellDateFormatter.formatToParts(nativeDate).find((part) => part.type === "day").value, [
    cellDateFormatter,
    nativeDate
  ]);
  return {
    cellProps: {
      role: "gridcell",
      "aria-disabled": !isSelectable || null,
      "aria-selected": isSelected || null,
      "aria-invalid": isInvalid || null
    },
    buttonProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(pressProps, {
      onFocus() {
        if (!isDisabled)
          state.setFocusedDate(date);
      },
      tabIndex,
      role: "button",
      "aria-disabled": !isSelectable || null,
      "aria-label": label,
      "aria-invalid": isInvalid || null,
      "aria-describedby": [
        isInvalid ? errorMessageId : null,
        descriptionProps["aria-describedby"]
      ].filter(Boolean).join(" ") || void 0,
      onPointerEnter(e) {
        if ("highlightDate" in state && (e.pointerType !== "touch" || state.isDragging) && isSelectable)
          state.highlightDate(date);
      },
      onPointerDown(e) {
        if ("releasePointerCapture" in e.target)
          e.target.releasePointerCapture(e.pointerId);
      },
      onContextMenu(e) {
        e.preventDefault();
      }
    }),
    isPressed,
    isFocused,
    isSelected,
    isDisabled,
    isUnavailable,
    isOutsideVisibleRange: date.compare(state.visibleRange.start) < 0 || date.compare(state.visibleRange.end) > 0,
    isInvalid,
    formattedDate
  };
}
export {
  $9942cad8a072a530$export$3ee915f8151bd4f1 as useCalendar,
  $36a0ac60f04457c5$export$136073280381448e as useCalendarCell,
  $e3031d1f8c9d64eb$export$cb95147730a423f5 as useCalendarGrid,
  $46a4342aab3d8076$export$87e0539f600c24e5 as useRangeCalendar
};
//# sourceMappingURL=@react-aria_calendar.js.map
