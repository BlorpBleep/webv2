{
  "version": 3,
  "sources": ["../../../../../../node_modules/.pnpm/@react-aria+tabs@3.9.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/tabs/dist/packages/@react-aria/tabs/src/utils.ts", "../../../../../../node_modules/.pnpm/@react-aria+tabs@3.9.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/tabs/dist/packages/@react-aria/tabs/src/useTab.ts", "../../../../../../node_modules/.pnpm/@react-aria+tabs@3.9.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/tabs/dist/packages/@react-aria/tabs/src/useTabPanel.ts", "../../../../../../node_modules/.pnpm/@react-aria+tabs@3.9.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/tabs/dist/packages/@react-aria/tabs/src/TabsKeyboardDelegate.ts", "../../../../../../node_modules/.pnpm/@react-aria+tabs@3.9.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/tabs/dist/packages/@react-aria/tabs/src/useTabList.ts"],
  "sourcesContent": ["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from '@react-types/shared';\nimport {TabListState} from '@react-stately/tabs';\n\nexport const tabsIds = new WeakMap<TabListState<unknown>, string>();\n\nexport function generateId<T>(state: TabListState<T>, key: Key, role: string) {\n  if (typeof key === 'string') {\n    key = key.replace(/\\s+/g, '');\n  }\n\n  let baseId = tabsIds.get(state);\n  return `${baseId}-${role}-${key}`;\n}\n\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTabProps} from '@react-types/tabs';\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useLinkProps} from '@react-aria/utils';\nimport {generateId} from './utils';\nimport {RefObject} from 'react';\nimport {TabListState} from '@react-stately/tabs';\nimport {useSelectableItem} from '@react-aria/selection';\n\nexport interface TabAria {\n  /** Props for the tab element. */\n  tabProps: DOMAttributes,\n  /** Whether the tab is currently selected. */\n  isSelected: boolean,\n  /** Whether the tab is disabled. */\n  isDisabled: boolean,\n  /** Whether the tab is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a tab.\n * When selected, the associated tab panel is shown.\n */\nexport function useTab<T>(\n  props: AriaTabProps,\n  state: TabListState<T>,\n  ref: RefObject<FocusableElement>\n): TabAria {\n  let {key, isDisabled: propsDisabled, shouldSelectOnPressUp} = props;\n  let {selectionManager: manager, selectedKey} = state;\n\n  let isSelected = key === selectedKey;\n\n  let isDisabled = propsDisabled || state.isDisabled || state.selectionManager.isDisabled(key);\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: manager,\n    key,\n    ref,\n    isDisabled,\n    shouldSelectOnPressUp,\n    linkBehavior: 'selection'\n  });\n\n  let tabId = generateId(state, key, 'tab');\n  let tabPanelId = generateId(state, key, 'tabpanel');\n  let {tabIndex} = itemProps;\n\n  let item = state.collection.getItem(key);\n  let domProps = filterDOMProps(item?.props, {labelable: true});\n  delete domProps.id;\n  let linkProps = useLinkProps(item?.props);\n\n  return {\n    tabProps: mergeProps(domProps, linkProps, itemProps, {\n      id: tabId,\n      'aria-selected': isSelected,\n      'aria-disabled': isDisabled || undefined,\n      'aria-controls': isSelected ? tabPanelId : undefined,\n      tabIndex: isDisabled ? undefined : tabIndex,\n      role: 'tab'\n    }),\n    isSelected,\n    isDisabled,\n    isPressed\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTabPanelProps} from '@react-types/tabs';\nimport {DOMAttributes} from '@react-types/shared';\nimport {generateId} from './utils';\nimport {mergeProps, useLabels} from '@react-aria/utils';\nimport {RefObject} from 'react';\nimport {TabListState} from '@react-stately/tabs';\nimport {useHasTabbableChild} from '@react-aria/focus';\n\nexport interface TabPanelAria {\n  /** Props for the tab panel element. */\n  tabPanelProps: DOMAttributes\n}\n\n\n/**\n * Provides the behavior and accessibility implementation for a tab panel. A tab panel is a container for\n * the contents of a tab, and is shown when the tab is selected.\n */\nexport function useTabPanel<T>(props: AriaTabPanelProps, state: TabListState<T>, ref: RefObject<Element>): TabPanelAria {\n  // The tabpanel should have tabIndex=0 when there are no tabbable elements within it.\n  // Otherwise, tabbing from the focused tab should go directly to the first tabbable element\n  // within the tabpanel.\n  let tabIndex = useHasTabbableChild(ref) ? undefined : 0;\n\n  const id = generateId(state, props.id ?? state?.selectedKey, 'tabpanel');\n  const tabPanelProps = useLabels({...props, id, 'aria-labelledby': generateId(state, state?.selectedKey, 'tab')});\n\n  return {\n    tabPanelProps: mergeProps(tabPanelProps, {\n      tabIndex,\n      role: 'tabpanel',\n      'aria-describedby': props['aria-describedby'],\n      'aria-details': props['aria-details']\n    })\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Direction, Key, KeyboardDelegate, Node, Orientation} from '@react-types/shared';\n\nexport class TabsKeyboardDelegate<T> implements KeyboardDelegate {\n  private collection: Collection<Node<T>>;\n  private flipDirection: boolean;\n  private disabledKeys: Set<Key>;\n\n  constructor(collection: Collection<Node<T>>, direction: Direction, orientation: Orientation, disabledKeys: Set<Key> = new Set()) {\n    this.collection = collection;\n    this.flipDirection = direction === 'rtl' && orientation === 'horizontal';\n    this.disabledKeys = disabledKeys;\n  }\n\n  getKeyLeftOf(key: Key) {\n    if (this.flipDirection) {\n      return this.getNextKey(key);\n    }\n    return this.getPreviousKey(key);\n  }\n\n  getKeyRightOf(key: Key) {\n    if (this.flipDirection) {\n      return this.getPreviousKey(key);\n    }\n    return this.getNextKey(key);\n  }\n\n  getKeyAbove(key: Key) {\n    return this.getPreviousKey(key);\n  }\n\n  getKeyBelow(key: Key) {\n    return this.getNextKey(key);\n  }\n\n  private isDisabled(key: Key) {\n    return this.disabledKeys.has(key) || !!this.collection.getItem(key)?.props?.isDisabled;\n  }\n\n  getFirstKey() {\n    let key = this.collection.getFirstKey();\n    if (key != null && this.isDisabled(key)) {\n      key = this.getNextKey(key);\n    }\n    return key;\n  }\n\n  getLastKey() {\n    let key = this.collection.getLastKey();\n    if (key != null && this.isDisabled(key)) {\n      key = this.getPreviousKey(key);\n    }\n    return key;\n  }\n\n  getNextKey(key) {\n    do {\n      key = this.collection.getKeyAfter(key);\n      if (key == null) {\n        key = this.collection.getFirstKey();\n      }\n    } while (this.isDisabled(key));\n    return key;\n  }\n\n  getPreviousKey(key) {\n    do {\n      key = this.collection.getKeyBefore(key);\n      if (key == null) {\n        key = this.collection.getLastKey();\n      }\n    } while (this.isDisabled(key));\n    return key;\n  }\n}\n", "/*\n* Copyright 2020 Adobe. All rights reserved.\n* This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License. You may obtain a copy\n* of the License at http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software distributed under\n* the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n* OF ANY KIND, either express or implied. See the License for the specific language\n* governing permissions and limitations under the License.\n*/\n\nimport {AriaTabListProps} from '@react-types/tabs';\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps, useId, useLabels} from '@react-aria/utils';\nimport {RefObject, useMemo} from 'react';\nimport {TabListState} from '@react-stately/tabs';\nimport {tabsIds} from './utils';\nimport {TabsKeyboardDelegate} from './TabsKeyboardDelegate';\nimport {useLocale} from '@react-aria/i18n';\nimport {useSelectableCollection} from '@react-aria/selection';\n\nexport interface AriaTabListOptions<T> extends Omit<AriaTabListProps<T>, 'children'> {}\n\nexport interface TabListAria {\n  /** Props for the tablist container. */\n  tabListProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a tab list.\n * Tabs organize content into multiple sections and allow users to navigate between them.\n */\nexport function useTabList<T>(props: AriaTabListOptions<T>, state: TabListState<T>, ref: RefObject<HTMLElement>): TabListAria {\n  let {\n    orientation = 'horizontal',\n    keyboardActivation = 'automatic'\n  } = props;\n  let {\n    collection,\n    selectionManager: manager,\n    disabledKeys\n  } = state;\n  let {direction} = useLocale();\n  let delegate = useMemo(() => new TabsKeyboardDelegate(\n    collection,\n    direction,\n    orientation,\n    disabledKeys), [collection, disabledKeys, orientation, direction]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    selectOnFocus: keyboardActivation === 'automatic',\n    disallowEmptySelection: true,\n    scrollRef: ref,\n    linkBehavior: 'selection'\n  });\n\n  // Compute base id for all tabs\n  let tabsId = useId();\n  tabsIds.set(state, tabsId);\n\n  let tabListLabelProps = useLabels({...props, id: tabsId});\n\n  return {\n    tabListProps: {\n      ...mergeProps(collectionProps, tabListLabelProps),\n      role: 'tablist',\n      'aria-orientation': orientation,\n      tabIndex: undefined\n    }\n  };\n}\n"],
  "mappings": "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",
  "names": ["$bQNZs$useMemo"]
}
